capture_output - захват вывода stdout и stderr

text - текстовый режим для stdin, stdout и stderr

ps aux --no--headers выводим список процессов без имен столбцов


pids = []

result = {}

А есть какая то логика в том что мы сначала использовали список а потом словарь?

result.stdout.splitlines() разделяем список на строки


fields = line.split()


pids.append(int(pid))  добавляем пид в список


нужно что бы json, после программы в python выглядел вот так:



[{"pid_number": 1},{"Prime or Composite:"Prime"},{"pid_name": "cron"}, {"pid_number": 2},{"Prime or Composite:"Prime"}, {"pid_name": "gnome"}]
Декомпозируем задачи:

1. Получаем данные ,такие номер процесса и имя процесса
2. Парсим эти данные, получаем отдельный список с именами процесса и отдельный список с номерами процесса
3. добавляем ключ "pid_number" к номерам pid.  добавляем ключ к "pid_name"
4. Выводим результат на экран, (или же в jsob файл)


https://pythonru.com/uroki/funkcija-zip-dlja-nachinajushhih про функцию zip


Конечный результат:

[{"pid_number": 1},{"Prime or Composite:"Prime"},{"pid_name": "cron"}, {"pid_number": 2},{"Prime or Composite:"Prime"}, {"pid_name": "gnome"}]

Файл формата json . В нем список ,в который включено 3 словаря


```Написать программу которая принимает на вход json файл,от кода выше

и выводит на экран сообщение о том что в файле найдена ошибка и где именно ошибка
Пример. Руками подправил значение prime для числа 5 на composite
Программа должна найти ошибку и вывести что число ошибка. Число 5 на самом деле простое

Это должна быть вообще отдельная программ от кода выше. Просто обрабатывать ее результат```


Я понимаю что файл надо открыть и прочитать
и я это уже написал

[{'pid_number': '1', 'pid_name': '/sbin/init', 'Prime or Composite': 'Not Prime and Composite'}, {'pid_number': '2', 'pid_name': '[kthreadd]', 'Prime or Composite': 'Prime'}, {'pid_number': '3', 'pid_name': '[rcu_gp]', 'Prime or Composite': 'Prime'}, {'pid_number': '4', 'pid_name': '[rcu_par_gp]', 'Prime or Composite': 'Composite'}]

теперь если я иду и меняю значение у ключа 'prime or composite на неверное, программа должна заметить ошибку и вывести сообщение

тоесть мне нужно проверять значение у списка

я обратился к значениям ключа Prime or Composite

оно имеет зависимость от значений ключа pid_number'

тоесть мы должны проверять значения pid_number на простоту

типо если pid это просто число

то ключ 'Prime or Composite' должен иметь значение Prime
иначе собщениие об ошибке

 
и выводит на экран сообщение о том что в файле найдена ошибка и где именно ошибка
Пример. Руками подправил значение prime для числа 5 на composite
Программа должна найти ошибку и вывести что число ошибка. Число 5 на самом деле простое

меня не просили выводить сообщение о том что все хорошо
меня просили вывести что в числе есть ошибка. и каким на самом деле оно должно являться



 if result_after_check == "Prime" and prime_or_composite != "Prime":
        print("Число, {0} проверено. Найдена ошибка. Значениe в файле {1}, а число должно быть простым".format(pid_for_check,prime_or_composite))
    elif result_after_check == "Composite" and prime_or_composite != "Composite":
        print("Число, {0} проверено. Найдена ошибка. Значение в файле {1}, а число должно быть составным".format(pid_for_check,prime_or_composite))

        мне надо подумать над оптимизацией условий

        сейчас у меня так
        если число является простым а ключ prime_or_composite не равно prime ,тогда вывести ошибку

        если число является составным  а ключ rime_or_composite не равно сomposite, тогда вывести ошибку


        можно ли их склеить
        оператор or не кажется подходящим

        если пойти путем result_after_check == "Prime" and prime_or_composite == "Prime

        если число является простым и ключ тоже является простым 
        то тут можно сказать что все хорошо. это не ошибка . но нам такое не подxодит